#!/usr/bin/env bash
file="$2"
out="$3"
requiresfile="requires-list.txt"

#colors
green=$(tput setaf 2)
red=$(tput setaf 1)
normal=$(tput sgr0)

missing_packages() {
  rpmbuild -ba "$file" 2>&1|grep 'is needed by' > crateparse-"$file"
  echo -e "\033[0;32mOK: Created the file \033[0;33mcrateparse-$file\033[0m"
}

crate_parse() {
  while IFS= read -r line; do
    line=$(echo "$line"|\
        awk -F'is' '{print $1}'|\
        awk '{$1=$1;print}'| \
        sed -E 's/[()~]//g; s/^crate/rust-/g; s/ with crate/, rust-/g;s,/,+,g'
      )
    echo "$line"
  done < "$file"
}

parse() {
  tf="/tmp/tf"
  crate_parse > "$tf"
  printf "%-40s %-10s %-10s %-15s %-10s\n" "Package Name" "Min Ver" "Max Ver" "Available Ver" "Installable"
  while read -r line; do
    pkg=$(echo "$line"|awk '{print $1}')
    minver=$(echo "$line"|awk '{print $3}'|sed 's/,//g')
    maxver=$(echo "$line"|awk '{print $6}'|sed 's/,//g')
    avaver=$(search_ver)
    sup=$(check_ver "$avaver" "$minver" "$maxver")
    printf "%-40s %-10s %-10s %-15s %-10s\n" "$pkg$out" "$minver" "$maxver" "$avaver" "$sup"
  done < "$tf"
}

check_ver(){
  local sup
  if [[ ("$avaver" > "$minver" || "$avaver" == "$minver" ) && "$avaver" < "$maxver" ]];then
    sup="${green}OK${normal}"
  elif [[ ( -z "$minver" || -z "$maxver" ) && ( -n "$avaver" ) ]];then
    sup="${green}OK${normal}"
  else
    sup="${red}NOT${normal}"
  fi
  printf "%s" "$sup"
}

search_ver(){
  local getver
  for i in $pkg$out;do
    getver=$(dnf info "$i" 2>&1 /dev/null |\
      grep 'Version'|\
      awk -F':' '{print $2}'|\
      awk '{$1=$1;print}')
    if [ -z "$getver" ]; then
      getver="Missing Package"
      break
		fi
  done
  printf "%s" "$getver"
}

search_dep() {
	local builds
  pkg=$(crate_parse|awk '{print $1}')
  for i in $pkg;do
		echo "Searching $i$out"
    getver=$(dnf info "$i""$out"|\
      grep 'Version'|\
      awk -F':' '{print $2}'|\
      awk '{$1=$1;print}')
    if [ -n "$getver" ]; then
			builds+="BuildRequires: $i$out >= $getver;"
    else
      builds+="BuildRequires: $i$out #Missing package;"
		fi
  done
	echo -e "\033[32mGenerating BuildRequires list:\033[0m"
	IFS=';' read -ra build <<< "$builds"
	for i in "${build[@]}";do 
    echo "$i"|tee -a "$requiresfile"
  done
	echo -e "\033[32mThe file \033[33m$requiresfile\033[32m has been generated with the list\033[0m"
}

install_dep() {
  for i in $(crate_parse);do
		echo "Searching $i"
    sudo dnf -y install "$i""$out"
  done

}


case "$1" in
  generate)
    missing_packages
    save_parse
	;;
	search)
		search_dep
	;;
	install)
		install_dep
	;;
  parse)
    parse
  ;;
	*)
		echo -e "Usage:
		$0 generate specfile # generate the dependencies parses
		$0 search parsedep # use the generated parse file to search for dependencies
		$0 install parsedep # use to install the parsed dependencies
		"
esac

